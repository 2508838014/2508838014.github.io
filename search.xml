<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C#基础学习-1</title>
      <link href="/2022/09/04/c-ji-chu-xue-xi-1/"/>
      <url>/2022/09/04/c-ji-chu-xue-xi-1/</url>
      
        <content type="html"><![CDATA[<p>前言：<br>自己真正的编写自己的学习博客</p><h1 id="方法的类型"><a href="#方法的类型" class="headerlink" title="方法的类型"></a>方法的类型</h1><h2 id="普通方法"><a href="#普通方法" class="headerlink" title="普通方法"></a>普通方法</h2><p>方法就是函数。普通方法就是函数。在类中就是对于方法的“行为”进行描述。<br></p><h3 id="普通方法的语法格式"><a href="#普通方法的语法格式" class="headerlink" title="普通方法的语法格式"></a>普通方法的语法格式</h3><p>访问修饰符 返回值 方法名（参数列表）<br><br>{<br>    方法的具体功能<br>}<br><code>class Person {     private string name;     private int age;     public string Name     {         get{return name};         set{name=value};     }     //后面都可以使用Name进行取值与赋值 } Person p1=new Person(); p1.Name="zhangsan"; name2=p1.Name;</code></p><h2 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h2><p>构造方法可以队实例化出来的对象进行初始化<br></p><h3 id="构造方法的语法格式"><a href="#构造方法的语法格式" class="headerlink" title="构造方法的语法格式"></a>构造方法的语法格式</h3><p>public 类名()<br><br>{<br>    构造函数代码<br>}  </p><ol><li>构造方法要用public修饰  </li><li>构造方法没有返回值，切连void也不能写  </li><li>构造方法的方法名必须与类名一样  </li><li>构造方法可以有重载  </li><li>构造方法如果没有编写过会自动增加一个空的构造方法，但是手动编写有参或者无参数的构造方法后就不会自动添加了<br><code>class Person {  //无参数的构造方法  public Person()  {  zhanwei  }  //两个参数的构造方法  public Person(string name,int age)  {  this.name=name;  this.age=atge;  } } //如何使用 Person p2=new Person(); Person p3=new Person("monkey",18);</code></li></ol><h3 id="This关键字"><a href="#This关键字" class="headerlink" title="This关键字"></a>This关键字</h3><p>this 表示类内部的那个变量</p><h2 id="析构方法"><a href="#析构方法" class="headerlink" title="析构方法"></a>析构方法</h2><p>析构方法是常常用于清理一个对象与构造方法差不多是相反的东西</p><h3 id="析构方法的语法"><a href="#析构方法的语法" class="headerlink" title="析构方法的语法"></a>析构方法的语法</h3><p>～类名()<br>{<br>    析构方法代码体;<br>}  </p><ol><li>析构方法没有任何参数</li><li>析构方法没有返回值与访问修饰符</li><li>析构方法由系统自动调用</li><li>析构方法可以不屑。<br><code>//以后补充</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> -C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -C# -基础学习 -类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>diyi</title>
      <link href="/2022/08/21/diyi/"/>
      <url>/2022/08/21/diyi/</url>
      
        <content type="html"><![CDATA[<p>自己完成的第一篇博客的认证<br>下面来测试一下各种markdown的基本语法</p><h1 id="第一部分-level-1"><a href="#第一部分-level-1" class="headerlink" title="第一部分 level 1"></a>第一部分 level 1</h1><p>输入 “mdi + tab” 会自动插入下面的图片标记<br>输入 “mdl + tab” 会自动生成下面的链接标记<br>是需要自己保存才会用自动改变吧  </p><p>怎么感觉使用有点卡顿吧<br>能够确定是需要保存才会展现出来,<br><br>两边的反应速度好像基本一致  </p><h2 id="倾斜-level-2"><a href="#倾斜-level-2" class="headerlink" title="倾斜 level 2"></a>倾斜 level 2</h2><p>展现<em>新的</em>一行<br></p><h2 id="加粗-level-2"><a href="#加粗-level-2" class="headerlink" title="加粗 level 2"></a>加粗 level 2</h2><p>新的<strong>展现</strong>一行</p><h2 id="引用语法-level-2"><a href="#引用语法-level-2" class="headerlink" title="引用语法 level 2"></a>引用语法 level 2</h2><blockquote><p>yinyong<br>deiwfh</p><blockquote><p>bfejsbf</p><blockquote><p>kdfe<br>dwad<br>fkefb<br>fbrehk<br>dfbjhwe</p></blockquote></blockquote></blockquote><h2 id="代码块展示-level-2"><a href="#代码块展示-level-2" class="headerlink" title="代码块展示 level 2"></a>代码块展示 level 2</h2><p>`</p>            nishuoyiwoshuoyi    `  <h2 id="围栏式代码块展示-level-2"><a href="#围栏式代码块展示-level-2" class="headerlink" title="围栏式代码块展示 level 2"></a>围栏式代码块展示 level 2</h2><pre class="line-numbers language-none"><code class="language-none">&lt;html&gt;    &lt;head&gt;    nishuoyiwoshuoyi    &lt;/head&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>这是一类分割线前</p><hr><p>这是一类分割线后，二类分割线后</p><hr><p>二类分割线后</p><h2 id="列表语法"><a href="#列表语法" class="headerlink" title="列表语法"></a>列表语法</h2><ol><li>Cheiese</li><li>English</li><li>France</li></ol><h2 id="链接语法"><a href="#链接语法" class="headerlink" title="链接语法"></a>链接语法</h2><p>这是一个链接<a href="https://zh.wikipedia.org/zh-tw/%E5%88%9D%E9%9F%B3%E6%9C%AA%E4%BE%86" title="miku殿下来了">守护最好的殿下</a></p><h2 id="图片语法"><a href="#图片语法" class="headerlink" title="图片语法"></a>图片语法</h2><p>一个带链接的图片（!<a href="%E5%9B%BE%E7%89%87%E9%93%BE%E6%8E%A5" title="图片title">图片alt</a>）<br><a href="https://markdown.com.cn/"><img src="/assets/img/shiprock.jpg" alt="沙漠中的岩石图片" title="Shiprock"></a></p><p>##最后友情提示可以直接使用html的语法</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
